name: 'Release Please'

on:
  push:
    branches: [ 'master' ]

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  release-please:
    name: 'Release Please'
    runs-on: [ 'ubuntu-latest' ]
    outputs:
      releases_created: ${{ steps.run-release-please.outputs.releases_created }}
      BitrixReportGen--tag_name: ${{ steps.run-release-please.outputs.BitrixReportGen--tag_name }}
    steps:
      - name: 'Generate App Token'
        uses: actions/create-github-app-token@v1
        id: generate-token
        with:
          app-id: ${{ secrets.RELEASE_APP_ID}}
          private-key: ${{ secrets.RELEASE_APP_PRIVATE_KEY }}
      - name: 'Run release-please'
        uses: googleapis/release-please-action@v4
        id: run-release-please
        with:
          token: ${{ steps.generate-token.outputs.token }}
          config-file: .github/release-please-config.json
          manifest-file: .github/.release-please-manifest.json

  release-pkg:
    name: 'Release Nuget Package'
    runs-on: [ 'ubuntu-latest' ]
    needs: 'release-please'
    if: ${{ needs.release-please.outputs.releases_created == 'true' }}
    steps:
      - name: 'Checkout repo'
        uses: actions/checkout@v4
      - name: 'Setup .NET'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.102
      - name: 'Generate App Token'
        uses: actions/create-github-app-token@v1
        id: generate-token
        with:
          app-id: ${{ secrets.RELEASE_APP_ID}}
          private-key: ${{ secrets.RELEASE_APP_PRIVATE_KEY }}
      - name: 'Restore dependencies'
        run: dotnet restore
      - name: 'Build'
        run: dotnet build BitrixReportGen/BitrixReportGen.csproj --no-restore --configuration Release -v m
      - name: 'Pack'
        run: dotnet pack BitrixReportGen/BitrixReportGen.csproj --no-build --no-restore --configuration Release -v m -o ./artifacts
      - name: 'Upload nuget pgk to GitHub Release'
        run: gh release upload '${{ needs.release-please.outputs.BitrixReportGen--tag_name }}' ./artifacts/*.nupkg
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}

      - name: 'Upload nuget pgk as artifact'
        uses: actions/upload-artifact@v4
        with:
          name: 'BitrixReportGen.Package'
          path: ./artifacts/*.nupkg
          compression-level: 0
          if-no-files-found: error
          retention-days: 7

  actions-timeline:
    name: 'Generate Actions Timeline'
    runs-on: [ 'ubuntu-latest' ]
    needs: ['release-pkg', 'release-please']
    timeout-minutes: 3
    steps:
      - name: 'Generate Actions Timeline'
        uses: Kesin11/actions-timeline@v2
        with:
          show-waiting-runner: 'true'